diff --git a/cmake/find/find_freeimage_ext.cmake b/cmake/find/find_freeimage_ext.cmake
index 5c1743c..d6e7551 100644
--- a/cmake/find/find_freeimage_ext.cmake
+++ b/cmake/find/find_freeimage_ext.cmake
@@ -28,78 +28,128 @@
 
 function(FIND_FREEIMAGE_EXT)
 
-    set(FREEIMAGE_DIR "NOT-SPECIFIED" CACHE PATH "Directory that contains the freeimage library and the corresponding headers.")
-    #-----------------------------------------------------------------------------------------------
-
-    # try to find FreeImage manually
-    set(_FREEIMAGE_INCLUDE "NOTFOUND")
-    set(_FREEIMAGE_LIB "NOTFOUND")
-    set(_FREEIMAGE_SHARED "NOTFOUND")
-
-    find_file(_FREEIMAGE_HEADER_FILE "FreeImage.h" 
-        HINTS 
-            ${FREEIMAGE_DIR}
-            ${FREEIMAGE_DIR}/include
-            ${FREEIMAGE_DIR}/Dist/x64
-            /usr/include
-        )
-    mark_as_advanced(_FREEIMAGE_HEADER_FILE)
-    mark_as_advanced(_FREEIMAGE_SHARED)
-    mark_as_advanced(_FREEIMAGE_LIB)
+    find_package(freeimage CONFIG)
+    if(freeimage_NOTFOUND)
+        set(FREEIMAGE_DIR "NOT-SPECIFIED" CACHE PATH "Directory that contains the freeimage library and the corresponding headers.")
+        #-----------------------------------------------------------------------------------------------
+
+        # try to find FreeImage manually
+        set(_FREEIMAGE_INCLUDE "NOTFOUND")
+        set(_FREEIMAGE_LIB "NOTFOUND")
+        set(_FREEIMAGE_SHARED "NOTFOUND")
+
+        find_file(_FREEIMAGE_HEADER_FILE "FreeImage.h"
+            HINTS
+                ${FREEIMAGE_DIR}
+                ${FREEIMAGE_DIR}/include
+                ${FREEIMAGE_DIR}/Dist/x64
+                /usr/include
+            )
+
+        if(EXISTS ${_FREEIMAGE_HEADER_FILE})
+            get_filename_component(_FREEIMAGE_INCLUDE ${_FREEIMAGE_HEADER_FILE} PATH)
 
-    if(EXISTS ${_FREEIMAGE_HEADER_FILE})
-        get_filename_component(_FREEIMAGE_INCLUDE ${_FREEIMAGE_HEADER_FILE} PATH)
-
-        if(WINDOWS)
-            # assuming that the windows (x64) binaries from http://freeimage.sourceforge.net/download.html are used
-            find_file(_FREEIMAGE_LIB "${CMAKE_STATIC_LIBRARY_PREFIX}freeimage${CMAKE_STATIC_LIBRARY_SUFFIX}" 
-                HINTS 
-                    ${FREEIMAGE_DIR}
-                    ${FREEIMAGE_DIR}/Dist/x64
-                )
-
-            find_file(_FREEIMAGE_SHARED "${CMAKE_SHARED_LIBRARY_PREFIX}freeimage${CMAKE_SHARED_LIBRARY_SUFFIX}" 
-                HINTS 
-                    ${FREEIMAGE_DIR}
-                    ${FREEIMAGE_DIR}/Dist/x64
-                )
-
-        elseif(LINUX OR MACOSX)
-            # assuming the 'freeimage-dev' package is installed
-            # or freeimage was build manually and follows a common folder structure
-            set(_FREEIMAGE_LIB "") # not used
-            find_file(_FREEIMAGE_SHARED
-                NAMES
-                    "${CMAKE_SHARED_LIBRARY_PREFIX}freeimage${CMAKE_SHARED_LIBRARY_SUFFIX}"
-                    "libfreeimage.so"
-                HINTS 
-                    ${FREEIMAGE_DIR}
-                    ${FREEIMAGE_DIR}/lib64
-                    ${FREEIMAGE_DIR}/lib/aarch64-linux-gnu
-                    ${FREEIMAGE_DIR}/lib
-                    /usr/lib64
-                    /usr/lib/x86_64-linux-gnu
-                    /usr/lib/aarch64-linux-gnu
-                    /usr/lib
-                    /usr/local/lib
-                )
-
-            if(NOT EXISTS ${_FREEIMAGE_SHARED})
-                set(_OS_MESSAGE " install the 'libfreeimage-dev' package or")
+            if(WINDOWS)
+                # assuming that the windows (x64) binaries from http://freeimage.sourceforge.net/download.html are used
+                find_file(_FREEIMAGE_LIB "${CMAKE_STATIC_LIBRARY_PREFIX}freeimage${CMAKE_STATIC_LIBRARY_SUFFIX}"
+                    HINTS
+                        ${FREEIMAGE_DIR}
+                        ${FREEIMAGE_DIR}/Dist/x64
+                    )
+                find_file(_FREEIMAGE_SHARED "${CMAKE_SHARED_LIBRARY_PREFIX}freeimage${CMAKE_SHARED_LIBRARY_SUFFIX}"
+                    HINTS
+                        ${FREEIMAGE_DIR}
+                        ${FREEIMAGE_DIR}/Dist/x64
+                    )
+            elseif(LINUX OR MACOSX)
+                # assuming the 'freeimage-dev' package is installed
+                # or freeimage was build manually and follows a common folder structure
+                set(_FREEIMAGE_LIB "") # not used
+                find_file(_FREEIMAGE_SHARED
+                    NAMES
+                        "${CMAKE_SHARED_LIBRARY_PREFIX}freeimage${CMAKE_SHARED_LIBRARY_SUFFIX}"
+                        "libfreeimage.so"
+                    HINTS
+                        ${FREEIMAGE_DIR}
+                        ${FREEIMAGE_DIR}/lib64
+                        ${FREEIMAGE_DIR}/lib
+                        /usr/lib64
+                        /usr/lib/x86_64-linux-gnu
+                        /usr/lib
+                        /usr/local/lib
+                    )
+
+                if(NOT EXISTS ${_FREEIMAGE_SHARED})
+                    set(_OS_MESSAGE " install the 'libfreeimage-dev' package or")
+                endif()
             endif()
+
+            # error if dependencies can not be resolved
+            if(NOT EXISTS ${_FREEIMAGE_INCLUDE} OR (WINDOWS AND NOT EXISTS ${_FREEIMAGE_LIB}) OR NOT EXISTS ${_FREEIMAGE_SHARED})
+                message(STATUS "FREEIMAGE_DIR: ${FREEIMAGE_DIR}")
+                message(STATUS "_FREEIMAGE_HEADER_FILE: ${_FREEIMAGE_HEADER_FILE}")
+                message(STATUS "_FREEIMAGE_INCLUDE: ${_FREEIMAGE_INCLUDE}")
+                message(STATUS "_FREEIMAGE_LIB: ${_FREEIMAGE_LIB}")
+                message(STATUS "_FREEIMAGE_SHARED: ${_FREEIMAGE_SHARED}")
+                message(FATAL_ERROR "The dependency \"freeimage\" could not be resolved. Please${_OS_MESSAGE} specify 'FREEIMAGE_DIR'.")
+             endif()
         endif()
-    endif()
+    else()
+        if(MDL_LOG_DEPENDENCIES)
+            message(STATUS "[INFO] freeimage found via find_package")
+        endif()
+
+        get_target_property(_FREEIMAGE_INCLUDE      freeimage::FreeImage INTERFACE_INCLUDE_DIRECTORIES)
+        get_target_property(_FREEIMAGE_DEPENDENCIES freeimage::FreeImage INTERFACE_LINK_LIBRARIES     )
+
+        get_target_property(_FREEIMAGE_SHARED freeimage::FreeImage IMPORTED_LOCATION)
+        if(NOT _FREEIMAGE_SHARED)
+            get_target_property(_FREEIMAGE_SHARED freeimage::FreeImage IMPORTED_LOCATION_RELEASE)
+        endif()
+        if(NOT _FREEIMAGE_SHARED)
+            get_target_property(_FREEIMAGE_SHARED freeimage::FreeImage IMPORTED_LOCATION_DEBUG)
+        endif()
+
+        get_target_property(_FREEIMAGE_TYPE freeimage::FreeImage TYPE)
+        if(${_FREEIMAGE_TYPE} STREQUAL "STATIC_LIBRARY")
+            set(_FREEIMAGE_LIB ${_FREEIMAGE_SHARED})
+        else()
+            get_target_property(_FREEIMAGE_LIB freeimage::FreeImage IMPORTED_IMPLIB)
+            if(NOT _FREEIMAGE_LIB)
+                get_target_property(_FREEIMAGE_LIB freeimage::FreeImage IMPORTED_IMPLIB_RELEASE)
+            endif()
+            if(NOT _FREEIMAGE_LIB)
+                get_target_property(_FREEIMAGE_LIB freeimage::FreeImage IMPORTED_IMPLIB_DEBUG)
+            endif()
+        endif()
+
+        find_file(_FREEIMAGE_HEADER_FILE "FreeImage.h"
+            HINTS
+                ${_FREEIMAGE_INCLUDE}
+        )
 
-    # error if dependencies can not be resolved
-    if(NOT EXISTS ${_FREEIMAGE_INCLUDE} OR (WINDOWS AND NOT EXISTS ${_FREEIMAGE_LIB}) OR NOT EXISTS ${_FREEIMAGE_SHARED})
-        message(STATUS "FREEIMAGE_DIR: ${FREEIMAGE_DIR}")
-        message(STATUS "_FREEIMAGE_HEADER_FILE: ${_FREEIMAGE_HEADER_FILE}")
-        message(STATUS "_FREEIMAGE_INCLUDE: ${_FREEIMAGE_INCLUDE}")
-        message(STATUS "_FREEIMAGE_LIB: ${_FREEIMAGE_LIB}")
-        message(STATUS "_FREEIMAGE_SHARED: ${_FREEIMAGE_SHARED}")
-        message(FATAL_ERROR "The dependency \"freeimage\" could not be resolved. Please${_OS_MESSAGE} specify 'FREEIMAGE_DIR'.")
+        # error if dependencies can not be resolved
+        if(NOT EXISTS ${_FREEIMAGE_INCLUDE} OR (WINDOWS AND NOT EXISTS ${_FREEIMAGE_LIB}) OR NOT EXISTS ${_FREEIMAGE_SHARED})
+            message(STATUS "FREEIMAGE_DIR: ${FREEIMAGE_DIR}")
+            message(STATUS "_FREEIMAGE_HEADER_FILE: ${_FREEIMAGE_HEADER_FILE}")
+            message(STATUS "_FREEIMAGE_INCLUDE: ${_FREEIMAGE_INCLUDE}")
+            message(STATUS "_FREEIMAGE_LIB: ${_FREEIMAGE_LIB}")
+            message(STATUS "_FREEIMAGE_SHARED: ${_FREEIMAGE_SHARED}")
+            message(FATAL_ERROR "The dependency \"freeimage\" could not be resolved. Please${_OS_MESSAGE} specify 'FREEIMAGE_DIR'.")
+        endif()
+
+        list(APPEND _FREEIMAGE_LIB ${_FREEIMAGE_DEPENDENCIES})
+        list(APPEND _FREEIMAGE_SHARED ${_FREEIMAGE_DEPENDENCIES})
+
+        mark_as_advanced(_FREEIMAGE_TYPE)
+        mark_as_advanced(_FREEIMAGE_DEPENDENCIES)
     endif()
 
+    mark_as_advanced(_FREEIMAGE_INCLUDE)
+    mark_as_advanced(_FREEIMAGE_HEADER_FILE)
+    mark_as_advanced(_FREEIMAGE_SHARED)
+    mark_as_advanced(_FREEIMAGE_LIB)
+
     # store path that are later used in the add_freeimage.cmake
     set(MDL_DEPENDENCY_FREEIMAGE_INCLUDE ${_FREEIMAGE_INCLUDE} CACHE INTERNAL "freeimage headers")
     set(MDL_DEPENDENCY_FREEIMAGE_LIBS ${_FREEIMAGE_LIB} CACHE INTERNAL "freeimage libs")
